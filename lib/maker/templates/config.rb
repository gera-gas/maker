require 'maker'

# Global configuration file.
$tmp_global_config = [
"# Global configuration script.",
"# Write you setting for each OS types.",
"require 'os'",
"",
"# Settings for Windows family OS.",
"if OS.windows? then",
"  case OS.bits",
"  when 32",
"    # TODO: only for 32 bitness.",
"  when 64",
"    # TODO: only for 64 bitness.",
"  end",
"end",
"",
"# Settings for Linux family OS.",
"if OS.linux? then",
"  case OS.bits",
"  when 32",
"    # TODO: only for 32 bitness.",
"  when 64",
"    # TODO: only for 64 bitness.",
"  end",
"end",
"",
"# Settings for MAC family OS.",
"if OS.mac? then",
"  case OS.bits",
"  when 32",
"    # TODO: only for 32 bitness.",
"  when 64",
"    # TODO: only for 64 bitness.",
"  end",
"end",
"",
"# Global config variables.",
"$global_config = {",
"  # Templates setting for 'gen' command.",
"  :gen => {",
"    :src => ['c', 'cc', 'cpp', 'c++', 'cxx'],",
"    :hdr => ['h', 'hpp', 'hxx'],",
"    :main => [],",
"    :main_hello => [],",
"  },",
"  # Set additional environment settings.",
"  # May be change by option '-e=[...]' of some commands.",
"  :env => 'develop',",
"  # Settings for configure_in.",
"  # All configuration files will be output to [common]/[generated].",
"  :in => {",
"    :typedef => {",
"      'INT8' => 'int8_t',",
"      'UINT8' => 'uint8_t',",
"      'INT16' => 'int16_t',",
"      'UINT16' => 'uint16_t',",
"      'INT32' => 'int32_t',",
"      'UINT32' => 'uint32_t',",
"      'INT64' => 'int64_t',",
"      'UINT64' => 'uint64_t',",
"    },",
"  },",
"  # Global build settings.",
"  :build => {",
"    :asm => {",
"      :tool => 'gcc',",
"      :option => {",
"        :debug => '-g -O2',",
"        :release => '-Os',",
"      },",
"    },",
"    :c => {",
"      :tool => 'gcc',",
"      :option => {",
"        :debug => '-g -O2',",
"        :release => '-Os',",
"      },",
"    },",
"    :cpp => {",
"      :tool => 'g++',",
"      :option => {",
"        :debug => '-g -O2',",
"        :release => '-Os',",
"      },",
"    },",
"    :ld => {",
"      :tool => 'ld',",
"      :option => {",
"        :debug => '',",
"        :release => '',",
"      },",
"    },",
"    :ar => {",
"      :tool => 'ar',",
"      :option => {",
"        :debug => '-rsc',",
"        :release => '-rsc',",
"      },",
"    },",
"  },",
"}"
]
